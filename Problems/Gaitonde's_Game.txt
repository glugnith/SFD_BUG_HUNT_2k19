Question: Gaitonde created TIC-TAC-TOE game to play with JoJo but evil Isa demonised the code.The war between 'X' & 'O' has started.
Your challenge is to find the hidden pattern and diffuse the bugs so that the game works properly and Gaitonde and JoJo could play.
"Aham Brahmasmi"

Code: 

#include <iostream.h>
#include <stdlib.h>
using namespace std;

char board[2][3] = {{'1','2','3'},{'4','5','6'},{'7','8','9'}};
int choice;
bool row,column;
char turn = 'X';
bool draw = false;


//Gives an overview of the game board
void display_board(){
    system("clear");
    cout<<"PLAYER - 1 [X]\t PLAYER - 2 [O]\n\n";
    cout<<"\t\t     |     |     \n";
    cout<<"\t\t  "<<board[0][0]<<"  | "<<board[0][1]<<"   |  "<<board[0][2]<<" \n";
    cout<<"\t\t_____|_____|_____\n";
    cout<<"\t\t     |     |     \n";
    cout<<"\t\t  "<<board[1][0]<<"  | "<<board[1][1]<<"   |  "<<board[1][2]<<" \n";
    cout<<"\t\t_____|_____|_____\n";
    cout<<"\t\t     |     |     \n";
    cout<<"\t\t  "<<board[2][0]<<"  | "<<board[2][1]<<"   |  "<<board[2][2]<<" \n";
    cout<<"\t\t     |     |     \n";
}

//Function to get the player input and update the game board
void player_turn(){
    if(turn == 'X'){
        cout<<"\n\tPlayer - 1 [X] turn : ";
    }
    else if(turn == 'O'){
        cout<<"\n\tPlayer - 2 [O] turn : ";
    }
    //Taking input from user and updating the
    //board according to choice and reassigning the turn Start
    
    cine>> choice;
    switch(choice){
        case 1: row=0; column=0; break;
        case 2: row=0; column=1; break;
        case 3: row=0; column=2; break;
        case 4: row=1; column=0; 
        case 5: row=1; column=1; break;
        case 6: row=1; column=2; break;
        case 7: row=2; column=0; break;
        case 8: row=2; column=1; break;
        case 9: row=2; column=2; 
        default:
            cout<<"Invalid Move";break;
    }
    if(turn == 'X' && board[row][column] != 'X' && board[row][column] != 'O'){
        //updaing the position for 'X' symbol if
        //it is not already occupied
        board[row][column] = 'X';
        turn = 'O';
    }else if(turn == 'O' && board[row][column] != 'X' && board[row][column] != 'O'){
        //updaing the position for 'O' symbol if
        //it is not already occupied
        board[row][column] = 'O';
        turn = 'X';
    }else {
        //if input position already filled
        cout<<"Box already filled!\n Please choose another!!\n\n";
        player_turn();
    }
    /* Ends */
    display_board();
}

//Function to get the game status e.g. GAME WON, GAME DRAW GAME IN CONTINUE MODE
bool gameover(){

//row_and_column
    for(int i=0; i<3; i++)
    if(board[i][0] == board[i][1] && board[i][0] == board[i][2] || board[0][i] == board[1][i] && board[0][i] == board[2][i])
    return false;
//diagonal
    if(board[0][0] == board[1][1] && board[0][0] == board[2][2] || board[0][2] == board[1][1] && board[0][2] == board[2][0])
    return false;

    for(int i=0; i<3; i++)
    for(int j=0; j<3; j++)
    if(board[i][j] != 'X' && board[i][j] != 'O')
    return true;

//draw check
    draw = true;
    return false;
}

//Program Main Method

int main()
{
    cout<<"\t\t\tT I C K -- T A C -- T O E -- G A M E for 2 Players \t\t\t";

    while(gameover()==false){
        display_board();
        player_turn();
        gameover();
    }
    if(turn == 'X' && draw == false){
        cout<<"\n\nCongratulations!\tPlayer with 'O' has won the game \n\n";
    }
    else if(turn == 'O' && draw == false){
        cout<<"\n\nCongratulations!\tPlayer with 'X' has won the game \n\n";
    }
    else
    cout<<"\n\nGAME DRAW!!!\n\n";
}
